<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA4ODgAODg4Bzg4OB84ODgjODg4Izg4OCM4ODgjODg4Izg4OCM4ODgjODg4Izg4
        OCM4ODgjODg4Izg4OCM4ODgjODg4Izg4OCM4ODgjODg4Izg4OCM4ODgjODg4Izg4OB84ODgHODg4AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAODg4ADg4OAU4ODiCODg43Tg4ON84ODjfODg43zg4ON84ODjfODg43zg4
        ON84ODjfODg43zU2Nt81NjbfODg43zg4ON84ODjfODg43zg4ON84ODjfODg43zg4ON84ODjfODg43Tg4
        OII2NjYFNjY2AAAAAAAAAAAAAAAAAAAAAAA4ODgAODg4Gzg4ONw8PDz/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9ERET/dnJv/3Zyb/9ERET/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC3EJCQhtCQkIAAAAAAAAAAAAAAAAAAAAAADg4OAA3NzcfOjo64EdHR/9MTEz/TExM/0xM
        TP9MTEz/TExM/0xMTP9MTEz/S0tL/1pYWP/WycH/1snB/1pYWP9LS0v/TExM/0xMTP9MTEz/TExM/0xM
        TP9MTEz/TExM/0xMTP9MTEzgTExMH0xMTAAAAAAAAAAAAAAAAAAAAAAAODg4ADc3Nxs7OzvcSUlJ/0xM
        TP9MTEz/TExM/0xMTP9MTEz/TExM/0xMTP9MTEz/Tk5O/4F8ef+BfHn/Tk5O/0xMTP9MTEz/TExM/0xM
        TP9MTEz/TExM/0xMTP9MTEz/TExM/0xMTN1MTEwcTExMAAAAAAAAAAAAAAAAAAAAAAA4ODgAMTExBTw8
        PINHR0fuR0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/RUVF/0VFRf9HR0f/R0dH/0dH
        R/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9JSUnuTExMhkpKSgZLS0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA1QUsARmaGAicpKYslJib/JSYm/yUmJv8lJib/JSYm/yUmJv8lJib/JSYm/yUmJv8lJib/JSYm/yUm
        Jv8lJib/JSYm/yUmJv8lJib/JSYm/yUmJv8lJib/JSYm/ycpKotRcZYDO0dTAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMVaAADsaQAMQywajzUoHf83Kh3/Nyod/zcqHf83Kh3/Nyod/zcqHf83Kh3/Nyod/zcq
        Hf83Kh3/Nyod/zcqHf83Kh3/Nyod/zcqHf83Kh3/Nyod/zcqHf83Kh3/STEaj/+AAAzjbQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvlkAAL9ZAHC0VQLzuFoE/8ViBP/FYgT/xWIE/8ViBP/FYgT/xWIE/8Vi
        BP/FYgT/xWIE/8ViBP/FYgT/xWIE/8ViBP/FYgT/xWIE/8ViBP/FYgT/xWIE/8ViBP/PZgLz3GsAcNtr
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+WQAAvlkAgL5ZAP/OYwD/3WwA/91sAP/dbAD/3WwA/91s
        AP/dbAD/3WwA/91sAP/dbAD/3WwA/91sAP/dbAD/3WwA/91sAP/dbAD/3WwA/91sAP/dbAD/3WwA/9xr
        AP/bawB/22sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALpXAAC6VwB/ulcA/8lgAP/YaQD/12gA/9hp
        AP/YaQD/12gA/9hpAP/YaQD/12gA/9hpAP/YaQD/2GkA/9hpAP/XaAD/12gA/9hpAP/YaQD/12gA/9hp
        AP/YaQD/2GkA/9hpAH/YaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoE4AAKJOAGGhTgD+rVMA/8Zl
        Ef/KcSL/xWUQ/8VlEP/KcSL/xWUQ/8VlEP/KcSL/xWUQ/8FbAP/BWwD/wVsA/8ZmEf/KcSL/xWUQ/8Vl
        EP/KcSL/xWUQ/8FbAP/BWwD+wlsAY8FbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdTAAAnUwAL51M
        AOuiTQD/1JZg//Haxf/Wll3/1pZd//DZxf/Wll3/1pZd//DZxf/Wl2D/vVcA/75ZAP+9VwD/15hg//DZ
        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
        gD//AIA//wCAP/8AgD///4A///+AP///gD8=
</value>
  </data>
</root>